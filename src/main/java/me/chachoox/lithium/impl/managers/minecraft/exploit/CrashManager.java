package me.chachoox.lithium.impl.managers.minecraft.exploit;

import me.chachoox.lithium.api.event.bus.Listener;
import me.chachoox.lithium.api.event.bus.SubscriberImpl;
import me.chachoox.lithium.api.interfaces.Minecraftable;
import me.chachoox.lithium.api.util.logger.Logger;
import me.chachoox.lithium.api.util.text.TextColor;
import me.chachoox.lithium.impl.event.events.network.PacketEvent;
import net.minecraft.network.play.server.SPacketChat;
import net.minecraft.network.play.server.SPacketParticles;
import net.minecraft.network.play.server.SPacketSoundEffect;

import java.util.stream.Stream;

public class CrashManager extends SubscriberImpl implements Minecraftable {

    public CrashManager() {
        this.listeners.add(new Listener<PacketEvent.Receive<SPacketChat>>
                (PacketEvent.Receive.class, Integer.MAX_VALUE, SPacketChat.class) {
            @Override
            public void call(PacketEvent.Receive<SPacketChat> event) {
                final SPacketChat packet = event.getPacket();
                if (Stream.of("${", "$<", "$:-", "jndi:ldap", "$(").anyMatch(s -> packet.getChatComponent().getUnformattedText().contains(s))) {
                    Logger.getLogger().log(TextColor.RED + "(Potential) Log4J exploit detected");// Run!!!!!!
                    event.setCanceled(true);
                }
            }
        });
        this.listeners.add(new Listener<PacketEvent.Receive<SPacketParticles>>
                (PacketEvent.Receive.class, Integer.MAX_VALUE, SPacketParticles.class) {
            @Override
            public void call(PacketEvent.Receive<SPacketParticles> event) {
                if (event.getPacket().getParticleCount() > 1000) {
                    Logger.getLogger().log(TextColor.RED + "Potential Particle Crash detected");
                    event.setCanceled(true);
                }
            }
        });
        this.listeners.add(new Listener<PacketEvent.Receive<SPacketSoundEffect>>
                (PacketEvent.Receive.class, Integer.MAX_VALUE, SPacketSoundEffect.class) {
            @Override
            public void call(PacketEvent.Receive<SPacketSoundEffect> event) {
                if (event.getPacket().getPitch() > 1000 || event.getPacket().getVolume() > 1000) {
                    Logger.getLogger().log(TextColor.RED + "Potential Sound Crash detected");
                    event.setCanceled(true);
                }
            }
        });
    }
}
